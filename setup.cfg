[metadata]
name = rpbp
description = "Rp-Bp: Ribosome Profiling with Bayesian Predictions"
long-description = file: README.md
version = 2.0.0
url = https://github.com/dieterich-lab/rp-bp
author = Brandon Malone
maintainer = Etienne Boileau
maintainer-email = boileau@uni-heidelberg.de
license = MIT
keywords = bioinformatics, riboseq, open reading frame discovery, translation
# See https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Science/Research
    Topic :: Scientific/Engineering :: Bio-Informatics
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3.0

[options]
package_dir =
    = src
packages = find:
# major dependencies (including pinned versions) are installed with pbio
# see requirements.txt
install_requires =
    pbio
python_requires = >=3.6,<3.7.0a0
# Add entries to MANIFEST.in
include_package_data = True
zip_safe = False

[options.packages.find]
where = src

[options.entry_points]
console_scripts =
    # preprocessing
    extract-orf-coordinates = rpbp.reference_preprocessing.extract_orf_coordinates:main
    label-orfs = rpbp.reference_preprocessing.label_orfs:main
    prepare-rpbp-genome = rpbp.reference_preprocessing.prepare_rpbp_genome:main
    # profle construction
    create-orf-profiles = rpbp.orf_profile_construction.create_orf_profiles:main
    create-base-genome-profile = rpbp.orf_profile_construction.create_base_genome_profile:main
    extract-orf-profiles = rpbp.orf_profile_construction.extract_orf_profiles:main
    merge-replicate-orf-profiles = rpbp.translation_prediction.merge_replicate_orf_profiles:main
    run-rpbp-pipeline = rpbp.run_rpbp_pipeline:main
    run-all-rpbp-instances = rpbp.run_all_rpbp_instances:main
    # translation prediction
    predict-translated-orfs = rpbp.translation_prediction.predict_translated_orfs:main
    estimate-orf-bayes-factors = rpbp.translation_prediction.estimate_orf_bayes_factors:main
    select-final-prediction-set = rpbp.translation_prediction.select_final_prediction_set:main
    # preprocessing report
    create-read-length-metagene-profile-plot = rpbp.analysis.profile_construction.create_read_length_metagene_profile_plot:main
    visualize-metagene-profile-bayes-factor = rpbp.analysis.profile_construction.visualize_metagene_profile_bayes_factor:main
    create-rpbp-preprocessing-report = rpbp.analysis.profile_construction.create_rpbp_preprocessing_report:main
    get-all-read-filtering-counts = rpbp.analysis.profile_construction.get_all_read_filtering_counts:main
    visualize-read-filtering-counts = rpbp.analysis.profile_construction.visualize_read_filtering_counts:main
    # predictions report
    visualize-orf-type-metagene-profiles = rpbp.analysis.rpbp_predictions.visualize_orf_type_metagene_profiles:main
    create-orf-types-pie-chart = rpbp.analysis.rpbp_predictions.create_orf_types_pie_chart:main
    create-orf-types-bar-chart = rpbp.analysis.rpbp_predictions.create_orf_types_bar_chart:main
    create-orf-length-distribution-line-graph = rpbp.analysis.rpbp_predictions.create_orf_length_distribution_line_graph:main
    create-rpbp-predictions-report = rpbp.analysis.rpbp_predictions.create_rpbp_predictions_report:main
    create-bf-rpkm-scatter-plot = rpbp.analysis.rpbp_predictions.create_bf_rpkm_scatter_plot:main
    # proteomics report
    get-orf-peptide-matches = rpbp.analysis.proteomics.get_orf_peptide_matches:main
    get-all-orf-peptide-matches = rpbp.analysis.proteomics.get_all_orf_peptide_matches:main
    create-orf-peptide-coverage-line-graph = rpbp.analysis.proteomics.create_orf_peptide_coverage_line_graph:main
    filter-nonunique-peptide-matches = rpbp.analysis.proteomics.filter_nonunique_peptide_matches:main
    create-proteomics-report = rpbp.analysis.proteomics.create_proteomics_report:main
    # other
    create-riboseq-test-dataset = rpbp.analysis.create_riboseq_test_dataset:main
    match-orfs-with-qti-seq-peaks = rpbp.analysis.qti_seq.match_orfs_with_qti_seq_peaks:main
    add-mygene-info-to-orfs = rpbp.analysis.rpbp_predictions.add_mygene_info_to_orfs:main
    find-differential-micropeptides = rpbp.analysis.find_differential_micropeptides:main
    cluster-subcodon-counts = rpbp.analysis.profile_construction.cluster_subcodon_counts:main
    visualize-subcodon-clusters = rpbp.analysis.profile_construction.visualize_subcodon_clusters:main
    create-read-length-orf-profiles = rpbp.analysis.profile_construction.create_read_length_orf_profiles:main
    collect-read-length-orf-profiles = rpbp.analysis.profile_construction.collect_read_length_orf_profiles:main

# sphinx integration with setuptools
# [build_sphinx]
